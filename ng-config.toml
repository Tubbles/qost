[variable]
src = "{root}/src"
modules = "{src}/modules"
doctest = "{modules}/doctest"
fmt = "{modules}/fmt"
lua = "{modules}/lua"
# wren = "{modules}/wren"
common_compile_flags = [
    "-fdiagnostics-color=always",

    "-Wall",
    "-Wextra",
    "-Wshadow",
    "-pedantic",
    "-Wcast-align",
    "-Wunused",
    "-Wconversion",
    "-Wsign-conversion",
    "-Wmisleading-indentation",
    "-Wduplicated-cond",
    "-Wduplicated-branches",
    "-Wlogical-op",
    "-Wnull-dereference",
    "-Wuseless-cast",
    "-Wdouble-promotion",
    "-Wformat=2",
    "-Wimplicit-fallthrough",

    "-D_FORTIFY_SOURCE=2",
    "-D_GLIBCXX_ASSERTIONS",

    "-I {doctest}",
    "-I {fmt}/include",
    "-I {lua}",
    # "-I {wren}/src/include",
]
common_c_flags = ["-xc", "--std=c17", "{common_compile_flags}"]
common_cxx_flags = [
    "-xc++",
    "--std=c++20",
    "{common_compile_flags}",
    "-Wnon-virtual-dtor",
    "-Wold-style-cast",
    "-Woverloaded-virtual",
]
common_ld_flags = [
    "-fdiagnostics-color=always",

    # "-L {wren}/lib",
    # "-l:libwren.a",
    "-L {lua}",
    "-l:liblua.a",
    #
]

[profile.debug]
cflags = [
    "{common_c_flags}",
    "-Og",
    "-g",
    "-fsanitize=address",
    "-fsanitize=undefined",
]
cxxflags = [
    "{common_cxx_flags}",
    "-Og",
    "-g",
    "-fsanitize=address",
    "-fsanitize=undefined",
]
ldflags = ["{common_ld_flags}", "-fsanitize=address", "-fsanitize=undefined"]

[profile.release]
cflags = ["{common_c_flags}", "-s", "-O3", "-flto"]
cxxflags = ["{common_cxx_flags}", "-s", "-O3", "-flto"]
ldflags = ["{common_ld_flags}", "-s", "-flto"]

[binary."quest-on-saer-tor"]
dependencies = [
    "{src}/main.cc",
    # "{wren}/lib/libwren.a",
    "{lua}/liblua.a",
    #
]
